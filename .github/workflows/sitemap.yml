name: Build dynamic sitemap.xml

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * 1"   # every Monday 06:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Generate sitemap.xml
        env:
          BASE_URL: https://www.agravicshift.com
        run: |
          python - << 'PY'
          import os, sys, subprocess, html, pathlib

          BASE_URL = os.environ["BASE_URL"].rstrip("/")
          root = pathlib.Path(".").resolve()

          EXCLUDE_DIRS = {".git", ".github", ".vercel", "node_modules", "templates", "_drafts"}
          EXCLUDE_FILES = {"404.html"}  # add more if needed

          paths = []
          for dirpath, dirnames, filenames in os.walk(root):
              dirnames[:] = [d for d in dirnames if d not in EXCLUDE_DIRS and not d.startswith(".")]
              for f in filenames:
                  if not f.endswith(".html"): continue
                  if f in EXCLUDE_FILES: continue
                  p = pathlib.Path(dirpath) / f
                  rel = p.relative_to(root).as_posix()
                  paths.append(rel)

          def priority_for(rel):
              p = "/" + rel
              if p == "/index.html": return "1.0"
              if p in ("/toolkit.html", "/pricing.html"): return "0.8"
              if p in ("/faq.html", "/about.html"): return "0.6"
              if p in ("/thank-you.html", "/confirmed.html"): return "0.5"
              if p.startswith("/insights/"): return "0.6"
              return "0.5"

          def loc_for(rel):
              return BASE_URL + "/" if rel == "index.html" else f"{BASE_URL}/{rel}"

          def lastmod(rel):
              try:
                  iso = subprocess.check_output(
                      ["git","log","-1","--format=%cI","--", rel],
                      text=True
                  ).strip()
                  return iso or None
              except Exception:
                  return None

          urls = []
          for rel in sorted(paths):
              urls.append((loc_for(rel), priority_for(rel), lastmod(rel)))

          lines = [
              '<?xml version="1.0" encoding="UTF-8"?>',
              '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'
          ]
          for loc, pri, lm in urls:
              lines.append("  <url>")
              lines.append(f"    <loc>{html.escape(loc)}</loc>")
              if lm:
                  lines.append(f"    <lastmod>{lm}</lastmod>")
              lines.append(f"    <priority>{pri}</priority>")
              lines.append("  </url>")
          lines.append("</urlset>\n")

          pathlib.Path("sitemap.xml").write_text("\n".join(lines), encoding="utf-8")
          print(f"Wrote sitemap.xml with {len(urls)} URLs")
          PY

      - name: Validate XML (xmllint)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libxml2-utils
          xmllint --noout sitemap.xml

      - name: Commit & push sitemap.xml
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update sitemap.xml"
          file_pattern: sitemap.xml

      # Optional: ping search engines (safe to keep; they may ignore but never hurts)
      - name: Ping Google & Bing
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          SITE="https://www.agravicshift.com/sitemap.xml"
          echo "Pinging Google & Bing with $SITE"
          curl -fsS "https://www.google.com/ping?sitemap=${SITE}" || true
          curl -fsS "https://www.bing.com/ping?sitemap=${SITE}" || true
